INTRODUCTION                                                            *rc.vim*
        _  _                                                 _              ~
     __| |(_)  __ _   ___  _   _  ___     _ __  ___  __   __(_) _ __ ___    ~
    / _` || | / _` | / __|| | | |/ __|   | '__|/ __| \ \ / /| || '_ ` _ \   ~
   | (_| || || (_| || (__ | |_| |\__ \   | |  | (__  _\ V / | || | | | | |  ~
    \__,_||_| \__,_| \___| \__,_||___/   |_|   \___|(_)\_/  |_||_| |_| |_|  ~

                        General settings for Vim editor
                                   by @diacus

==============================================================================
CONTENTS                                                           *rc-contents*

Contents ......................................................... |rc-contents|
  Config ........................................................... |rc-config|
  Variables ..................................................... |rc-variables|
  Mappings ....................................................... |rc-mappings|
    Normal Mode Mappings .................................. |rc-normal-mappings|
    Insert Mode Mappings .................................. |rc-insert-mappings|
  netrw ...................................................... |rc-config-netrw|
  Keyboard ............................................................. |rc-kb|
  Writing ......................................................... |rc-writing|
  Python ........................................................... |rc-python|
  Tex ................................................................. |rc-tex|
==============================================================================

CONFIG                                                               *rc-config*

This plugin loads settings to modify the behavior of the editor:

 - turns on the cursor line and column
 - sets the line numbering
 - configures the behavior of netrw and Airline (if installed) plugins
 - enables the :Justify command

VARIABLES                                                         *rc-variables*

*g:use_bpython*  When inserting  a Python breakpoint  uses  the  library  shiped
               with the bpython interpreter >

    :let g:use_bpython = 1
<

*g:use_ipython*  When inserting a Python breakpoint uses the library shiped
               with the ipdb package >

    :let g:use_ipython = 1
<

*g:netrw_style* By default the  help  banner is hidden  and  the  open  tool  is
              properly set depending  on the operating system.  Also  you  can
control the style netrw uses to display and open the  files  by  setting  this
variable.  Use the value 'tree' to display netrw in tree  mode  within  a  20%
window size and to open the files in the previous window: >

    :let g:netrw_style = 'tree'
<

Use the value 'full' to display netrw in full mode within the current window: >

    :let g:netrw_style = 'full'
<

*g:split_resize* Set this variable to 1 to make the editor resize the active
               split to 85 columns width dynamically >
    :let g:split_resize = 1
<

Use the command :SplitResizeToogle to control this behavior

MAPPINGS                                                           *rc-mappings*

NORMAL MODE MAPPINGS                                        *rc-normal-mappings*

<F2>      Toogles spell checking, when it is active, the  syntax  highlighting
          is turned off

<F3>      Toggles the margin.  When the margin is turned on,  every  character

          beyond the margin will be highlighted with with red background

<F4>      Toogles automatic formatting for paragraphs. See |fo-table| for
          details

<leader>z Toggles syntax highlighting, line numbering and cursor line and
          column

<UP>      Displays the list of loaded buffers.

<Left>    Jumps to previous buffer

<Right>   Jumps to next buffer

<Tab>     Displays spell completion

<Down>    Disabled in normal mode

<leader>e Toggles :Lexplore with tree listing style


INSERT MODE MAPPINGS                                        *rc-insert-mappings*

{<CR>       Inserts a code block >

      {
        ...your code goes here...
      }
<
[<CR>       Inserts a multi line array >

      [
        ...your code goes here...
      ]
<
(<CR>       Inserts a multi line tuple >

      (
        ...your code goes here...
      )
<
''          Inserts a single quoted string, placing the cursor inside

""          Inserts a double quoted string, placing the cursor inside

((          Inserts a pair of matching parenthesis placing the cursor inside
            them

[[          Inserts a pair of matching square brackets placing the cursor
            inside them

{{          Inserts a pair of matching curly brackets placing the cursor
            inside them

<Tab><Tab>  Moves the cursor to the end of the line

COMMANDS                                                    *rc-config-commands*

                                                            *:SplitResizeToogle*
:SplitResizeToogle  Enablaes and disables the automatic vertical split resize,
                    the current split width is set to 85 columns.

NETRW                                                          *rc-config-netrw*

By default the help banner is hidden and the open tool is properly set depending
on the operating system. Also you can control the style netrw uses to display
and open the files by setting the value of g:netrw_style variable

Use the value 'tree' to display netrw in tree mode within a 20% window size and
to open the files in the previous window: >

    :set g:netrw_style = 'tree'
<

Use the value 'full' to display netrw in full mode within the current window: >

    :set g:netrw_style = 'full'
<

==============================================================================
KEYBOARD                                                                 *rc-kb*

Defines useful mappings depending de language of your keyboard. In order to
select a keyboard layout, set the |g:kb_layout| variable to one of these
values:

- 'en' for en_US layout
- 'es' for es_ES layout
- 'latam' for es_MX layout

If the |g:kb_layout| variable is not set or has a different value, this module
won't be loaded.

- For Spanish
  - The ñ and Ñ keys are mapped to <colon> in both normal an visual mode
  - <space> is mapped to / in both normal and visual mode
  - In Spanish layout, the <leader> key is mapped to <comma>
  - In Latin American layout, the <leader> key is mapped to the open question
    mark (¿)
- For English
  - The semicolon is mapped to <colon> in normal and visual modes

==============================================================================
WRITING                                                             *rc-writing*

This module turns on the following options:
- 'autoindent'
- 'wrap'
- 'linebreak'

Turns off the options:
- 'number'
- 'relativenumber'

And sets the following value options:
- 'textwidth' to 80 columns
- 'selectmode' to "mouse"

==============================================================================
PYTHON                                                               *rc-python*

INSERT MODE MAPPINGS
  - Hit "<CR> to insert a multi line python string: >
      """
        ...your text goes here...
      """
<
  - Hit '<CR> to insert a multi line python string: >
      '''
        ...your text goes here...
      '''
<

COMMANDS                                                    *rc-python-commands*

                                                                   *:BreakPoint*
:BreakPoint             Inserts a PDB breakpoint in the current buffer

                                                                 *:UnbreakPoint*
:UnbreakPoint           Deletes all the breakpoints (inserted through
                        |:BreakPoint|)

                                                                *rc-python-make*

:make                   When a Python buffer is active, this command runs
                        flake8 unless there is a Makefile in the current
                        working directory

==============================================================================
TEX                                                                     *rc-tex*

When working with tex or latex buffers, the indentation is set to  one  column
and the  makeprg option is set to use `latexmk` program, so ensure you have  it
installed.

COMMANDS                                                       *rc-tex-commands*

                                                                 *:LaTeXPreview*
:LaTeXPreview           Shows the PDF document generated by running |:make|

 vim:tw=78:et:ft=help:norl:
